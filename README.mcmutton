Depends on brut.apktool, brut.apktool.smali
Those in turn need android tools on path.

Needs something like:
export PATH="$PATH:$HOME/working/android/android-sdk-linux_x86/platform-tools"
export PATH="$PATH:$HOME/working/android/android-sdk-linux_x86/tools"

If you've freshly extracted the android sdk, you may need to update it to get the aapt files.
cd ~/working/android/android-sdk-linux_x86/tools
./android update sdk -u

To build/install:
# Started w/rev d58ae3f347e46531960e209a7c5a7f002c7bee6c
git clone https://github.com/brutall/brut.apktool.smali.git
cd brut.apktool.smali; mvn install
cd ..

# Using rev 569aa477734b9e73e20cc07b57b4f95d84fc1713, newer versions
# needed un-pushed dependencies
git clone https://github.com/brutall/brut.apktool.git
cd brut.apktool
git checkout 569aa477734b9e73e20cc07b57b4f95d84fc1713
mvn install
cd ..


Maven only puts dependencies to installed files, so you have to be
careful to do an install if you want to run the external code (may be
fixable).  If you can run in eclipse you might be fine.

Pattern:
cd /path/to/repo/root
mvn install

cd edu.ucsd.salud.mcmutton
bash bin/run_bughunt.sh --test-patterns

The mcmutton code uses a mcmutton.properties file which it tries to read
from the current subdirectory.  You likely need to change the scratch
path, the other paths will probably be ok for the moment.

The above code will end up converting a few apks and doing some silly
pattern analysis.  The entry points are in
src/main/java/edu/ucsd/salud/mcmutton/BugHunt.java
You will likely find
src/main/java/edu/ucsd/salud/mcmutton/apk/Wala.java
interesting.  (panosAnalyze() may not be up to date).

The patterns analysis depends on a little database file I made for my
interesting set of applications.  The file is called acqrel_status.json
and the path is currently defined in BugHunt.java.

My code isn't really documented, but hopefully the BugHunt examples
give a good overview.
